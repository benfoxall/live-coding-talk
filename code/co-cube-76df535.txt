//+https://cdnjs.cloudflare.com/ajax/libs/sylvester/0.1.3/sylvester.min.js

import {ctx, loop} from 'draw.js'
import {scale, rotate} from 'math.js'

const drawPoint = p => ctx.fillRect(p.e(1)-2, p.e(2)-2, 4, 4)

const points = [
  [-10,-10],
  [-10,+10],
  [+10,+10],
  [+10,-10]
].map(v => $V(v))


loop( t => {
  points
    .map(p => scale(2).multiply(p))
    .map(p => rotate(t/3000).multiply(p))
    .forEach(drawPoint)
})
//____draw.js
const canvas = document.createElement('canvas')
export const ctx = canvas.getContext('2d')
document.body.appendChild(canvas)

let ratio, w, h

const size = _ => {
  ratio = window.devicePixelRatio || 1

  w = canvas.width = window.innerWidth * ratio
  h = canvas.height = window.innerHeight * ratio

  canvas.style.width = `${window.innerWidth}px`
  canvas.style.height = `${window.innerHeight}px`
  ctx.translate(canvas.width/2,canvas.height/2)
  ctx.scale(ratio,ratio)
}
size()

window.addEventListener('resize', size)

export const clear = () => {
  ctx.clearRect(-w/2,-h/2,w,h)
}


export function loop(fn){
  requestAnimationFrame(function wrapped(t){
    clear()
    requestAnimationFrame(wrapped)
    fn(t)
  })
}
//____math.js
export const scale = s => $M([
  [s, 0],
  [0, s]
])

export const rotate = theta => $M([
  [Math.cos(theta), -Math.sin(theta)],
  [Math.sin(theta), Math.cos(theta)],
])
